# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY {globalAuthRule: AuthRule = {allow: public}} # FOR TESTING ONLY!
# ================================================================================

type Menu
  @model
  @auth(
    rules: [
      {allow: public, operations: [read]}
      {allow: groups, groups: ["Administrators"]}
    ]
  ) {
  id: ID!
  name: String!
  menuCategories: [MenuCategory!]! @hasMany(indexName: "byMenu", fields: ["id"])
}

type MenuCategory
  @model
  @auth(
    rules: [
      {allow: public, operations: [read]}
      {allow: groups, groups: ["Administrators"]}
    ]
  ) {
  id: ID!
  menuID: ID! @index(name: "byMenu", sortKeyFields: ["name"])
  name: String!
  menuItems: [MenuItem!]! @hasMany(indexName: "byMenuCategory", fields: ["id"])
}

type MenuItem
  @model
  @auth(
    rules: [
      {allow: public, operations: [read]}
      {allow: groups, groups: ["Administrators"]}
    ]
  ) {
  id: ID!
  menuCategoryID: ID! @index(name: "byMenuCategory", sortKeyFields: ["id"])
  title: String!
  image: String!
  description: String!
  price: Int!
}

# ================================================================================

type Customer
  @model
  @auth(
    rules: [
      {allow: owner, operations: [create, read]}
      {allow: groups, groups: ["Administrators"]}
    ]
  ) {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  orders: [Order!] @hasMany(indexName: "byCustomer", fields: ["id"])
}

type Order
  @model
  @auth(
    rules: [
      {allow: owner, operations: [create, read]}
      {allow: groups, groups: ["Administrators"]}
    ]
  ) {
  id: ID!
  customerID: ID! @index(name: "byCustomer", sortKeyFields: ["id"])
  email: String!
  totalItems: Int!
  subtotal: Int!
  tax: Int!
  total: Int!
  items: [OrderItem!]! @hasMany(indexName: "byOrder", fields: ["id"])
}

type OrderItem
  @model
  @auth(
    rules: [
      {allow: owner, operations: [create, read]}
      {allow: groups, groups: ["Administrators"]}
    ]
  ) {
  id: ID! # use uuid v7 to generate a unique id
  orderID: ID! @index(name: "byOrder", sortKeyFields: ["menuItemID"])
  menuItemID: ID!
  quantity: Int!
}
